# yaml-language-server: $schema=https://spec.openapis.org/oas/3.1/schema/2021-05-20
---
# for the intellisense
openapi: "3.1.0"
info: { title: "", version: "" }

paths:
  Path:
    get:
      summary: "문제 검색하기"
      description: "주어진 쿼리에 따라 문제를 검색합니다."
      tags:
        - search
      operationId: searchProblem

      parameters:
        - name: "query"
          in: "query"
          description: "쿼리 문자열"
          required: true
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "페이지"
          schema:
            type: "number"
        - name: "sort"
          in: "query"
          description: |
            정렬 기준

            <details>
              <summary>
                열거형 값 설명
              </summary>

              | 값          | 설명                   |
              | ----------- | ---------------------- |
              | id          | 백준에서의 문제 ID     |
              | level       | 문제 수준              |
              | title       | 문제 제목              |
              | solved      | 푼 사람 수             |
              | average_try | 평균 시도              |
              | random      | 시프트 마음대로 (랜덤) |

            </details>
          schema:
            type: "string"
            enum:
              - "id"
              - "level"
              - "title"
              - "solved"
              - "average_try"
              - "random"
        - name: "direction"
          in: "query"
          description: |
            정렬 방향

            <details>
              <summary>
                열거형 값 설명
              </summary>

              | 값   | 설명                    |
              | ---- | ----------------------- |
              | asc  | 오름차순 (작은 것 먼저) |
              | desc | 내림차순 (큰 것 먼저)   |

            </details>
          schema:
            type: "string"
            enum:
              - "asc"
              - "desc"

      responses:
        "200":
          description: "서버가 반환에 성공한 경우입니다."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  count:
                    description: "찾은 문제 수입니다."
                    type: "integer"
                    format: "int64"
                    example: 1
                  items:
                    description: "찾은 문제 목록입니다."
                    type: "array"
                    items:
                      $ref: "../../schemas/problem.yaml#/components/schemas/Schema"
